[
  {
    "testcases": [
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 0.0,
        "name": "invalid_delete_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 0.0,
        "name": "invalid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==32137== Memcheck, a memory error detector\n==32137== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==32137== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==32137== Command: ./client 127.0.0.1:49657 PUT testfile.c testcommon.c\n==32137== \n==32137== \n==32137== HEAP SUMMARY:\n==32137==     in use at exit: 0 bytes in 0 blocks\n==32137==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==32137== \n==32137== All heap blocks were freed -- no leaks are possible\n==32137== \n==32137== For counts of detected and suppressed errors, rerun with: -v\n==32137== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "description": "Tests for no memory errors (depends on: PUT)",
        "ptsEarned": 2.0,
        "name": "memory_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "too_little_data_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "too_much_data_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "valid_delete_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_list_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can put valid files",
        "ptsEarned": 0.0,
        "name": "valid_put_test"
      }
    ],
    "revision": "51628",
    "checksum": "234e901c67c6421653ffec80dc35e081c1ae5450  client.c\nf2d1179919e4b81ffa9b17962758e222bcf7b2a4  common.c\n05a33996120a2cd87db7a43785630e3a20b9142c  common.h\n",
    "timestamp": "2017-11-16 22:00:26.077495"
  },
  {
    "testcases": [
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 0.0,
        "name": "invalid_delete_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 0.0,
        "name": "invalid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==532== Memcheck, a memory error detector\n==532== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==532== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==532== Command: ./client 127.0.0.1:49657 PUT testfile.c testcommon.c\n==532== \n==532== \n==532== HEAP SUMMARY:\n==532==     in use at exit: 0 bytes in 0 blocks\n==532==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==532== \n==532== All heap blocks were freed -- no leaks are possible\n==532== \n==532== For counts of detected and suppressed errors, rerun with: -v\n==532== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "description": "Tests for no memory errors (depends on: PUT)",
        "ptsEarned": 2.0,
        "name": "memory_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "too_little_data_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "too_much_data_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "valid_delete_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_list_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can put valid files",
        "ptsEarned": 0.0,
        "name": "valid_put_test"
      }
    ],
    "revision": "51654",
    "checksum": "234e901c67c6421653ffec80dc35e081c1ae5450  client.c\nf2d1179919e4b81ffa9b17962758e222bcf7b2a4  common.c\n05a33996120a2cd87db7a43785630e3a20b9142c  common.h\n",
    "timestamp": "2017-11-17 22:00:26.173912"
  },
  {
    "testcases": [
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 0.0,
        "name": "invalid_delete_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 0.0,
        "name": "invalid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==4234== Memcheck, a memory error detector\n==4234== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==4234== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==4234== Command: ./client 127.0.0.1:49657 PUT testfile.c testcommon.c\n==4234== \n==4234== \n==4234== HEAP SUMMARY:\n==4234==     in use at exit: 0 bytes in 0 blocks\n==4234==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==4234== \n==4234== All heap blocks were freed -- no leaks are possible\n==4234== \n==4234== For counts of detected and suppressed errors, rerun with: -v\n==4234== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "description": "Tests for no memory errors (depends on: PUT)",
        "ptsEarned": 2.0,
        "name": "memory_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "too_little_data_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "too_much_data_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "valid_delete_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_list_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can put valid files",
        "ptsEarned": 0.0,
        "name": "valid_put_test"
      }
    ],
    "revision": "51874",
    "checksum": "234e901c67c6421653ffec80dc35e081c1ae5450  client.c\nf2d1179919e4b81ffa9b17962758e222bcf7b2a4  common.c\n05a33996120a2cd87db7a43785630e3a20b9142c  common.h\n",
    "timestamp": "2017-11-18 22:00:28.034219"
  },
  {
    "testcases": [
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 2.0,
        "name": "invalid_delete_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 2.0,
        "name": "invalid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==7539== Memcheck, a memory error detector\n==7539== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==7539== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==7539== Command: ./client 127.0.0.1:49657 PUT testfile.c testcommon.c\n==7539== \n==7539== \n==7539== HEAP SUMMARY:\n==7539==     in use at exit: 616 bytes in 2 blocks\n==7539==   total heap usage: 77 allocs, 75 frees, 307,816 bytes allocated\n==7539== \n==7539== LEAK SUMMARY:\n==7539==    definitely lost: 0 bytes in 0 blocks\n==7539==    indirectly lost: 0 bytes in 0 blocks\n==7539==      possibly lost: 0 bytes in 0 blocks\n==7539==    still reachable: 616 bytes in 2 blocks\n==7539==         suppressed: 0 bytes in 0 blocks\n==7539== Reachable blocks (those to which a pointer was found) are not shown.\n==7539== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==7539== \n==7539== For counts of detected and suppressed errors, rerun with: -v\n==7539== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "description": "Tests for no memory errors (depends on: PUT)",
        "ptsEarned": 2.0,
        "name": "memory_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "too_little_data_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "too_much_data_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 3.0,
        "name": "valid_delete_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 0.0,
        "name": "valid_list_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "description": "Tests that we can put valid files",
        "ptsEarned": 0.0,
        "name": "valid_put_test"
      }
    ],
    "revision": "52935",
    "checksum": "2ebeda34ddaf1ec2470db4560e75509f6a1aa719  client.c\nf2d1179919e4b81ffa9b17962758e222bcf7b2a4  common.c\n05a33996120a2cd87db7a43785630e3a20b9142c  common.h\n",
    "timestamp": "2017-11-26 16:16:46.286937"
  },
  {
    "testcases": [
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 2.0,
        "name": "invalid_delete_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 2.0,
        "name": "invalid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==22765== Memcheck, a memory error detector\n==22765== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==22765== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==22765== Command: ./client 127.0.0.1:49657 PUT testfile.c testcommon.c\n==22765== \n==22765== \n==22765== HEAP SUMMARY:\n==22765==     in use at exit: 616 bytes in 2 blocks\n==22765==   total heap usage: 13 allocs, 11 frees, 45,672 bytes allocated\n==22765== \n==22765== LEAK SUMMARY:\n==22765==    definitely lost: 0 bytes in 0 blocks\n==22765==    indirectly lost: 0 bytes in 0 blocks\n==22765==      possibly lost: 0 bytes in 0 blocks\n==22765==    still reachable: 616 bytes in 2 blocks\n==22765==         suppressed: 0 bytes in 0 blocks\n==22765== Reachable blocks (those to which a pointer was found) are not shown.\n==22765== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==22765== \n==22765== For counts of detected and suppressed errors, rerun with: -v\n==22765== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "description": "Tests for no memory errors (depends on: PUT)",
        "ptsEarned": 2.0,
        "name": "memory_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "too_little_data_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "too_much_data_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 3.0,
        "name": "valid_delete_test"
      },
      {
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 3.0,
        "name": "valid_get_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 2.0,
        "name": "valid_list_test"
      },
      {
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "description": "Tests that we can put valid files",
        "ptsEarned": 2.0,
        "name": "valid_put_test"
      }
    ],
    "revision": "53082",
    "timestamp": "2017-11-26 22:00:26.138884",
    "checksum": "e346c6a24f171c0cb6876d10683e72391f17525b  client.c\nf2d1179919e4b81ffa9b17962758e222bcf7b2a4  common.c\n05a33996120a2cd87db7a43785630e3a20b9142c  common.h\n"
  }
]